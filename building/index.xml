<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Buildings on BMEG</title>
    <link>https://bmeg.github.io/building/</link>
    <description>Recent content in Buildings on BMEG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://bmeg.github.io/building/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Data Import</title>
      <link>https://bmeg.github.io/building/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bmeg.github.io/building/import/</guid>
      <description>Data Import All data import is done via CWL wrapped docker containers.
Write the schema From BMEG Phenotype Schema
message GeneOntologyTerm { string id = 1; string name = 2; string namespace = 3; string definition = 4; string comment = 5; repeated string synonym = 6; repeated string is_a = 7; repeated string alt_id = 8; repeated string subset = 9; repeated string xref = 10; bool is_obsolete = 11; repeated string consider = 12; }  Create Python code based on the schema protoc \ -I .</description>
    </item>
    
    <item>
      <title>Protograph</title>
      <link>https://bmeg.github.io/building/protograph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bmeg.github.io/building/protograph/</guid>
      <description>protograph Transform a stream of messages into a graph
what is protograph? Protograph is a protocol for transforming messages from any given schema into a set of graph vertexes and edges.
To do this, you compose a protograph.yml describing how to create vertexes and edges given a message of a variety of shapes (called labels in Protograph).
Given a well-constructed protograph.yml, input for Protograph is a stream of messages described in a Protocol Buffers schema, and the output is a list of vertexes and edges, in a schema of their own.</description>
    </item>
    
    <item>
      <title>Schema</title>
      <link>https://bmeg.github.io/building/schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bmeg.github.io/building/schema/</guid>
      <description> Data Schema Schemas for data in the BMEG are described using ProtoBuffer
Schemas Used  GA4GH Variants GA4GH Genotype2Phenotype BMEG Clinical data BMEG PFAM BMEG RNA Expression BMEG CNA Events BMEG Genome Description BMEG Phenotype and Drug Response BMEG PubMed BMEG Pathway  Example Schema: Drug Response Data message ResponseSummary { enum SummaryType { UNKNOWN = 0; EC50 = 1; IC50 = 2; LD50 = 3; GR50 = 4; AMAX = 5; AUC = 6; ACTIVITY_AREA = 7; RMSE = 8; } SummaryType type = 1; double value = 2; string unit = 3; } message CompoundElement { string compound = 1; double ratio = 3; } message ResponseCurve { enum ResponseType { UNKNOWN = 0; GROWTH = 1; ACTIVITY = 2; } string gid = 1; ResponseType responseType = 2; repeated DoseResponse values = 3; double growthStandard = 4; repeated CompoundElement compounds = 5; string sample = 6; repeated ResponseSummary summary = 7; repeated double controls = 8; repeated double blanks = 9; }  </description>
    </item>
    
  </channel>
</rss>